// Author: Pablo Sauma.

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecci.tarprog2;

/**
 * @author pablo_sauma
 */
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import static java.lang.Double.NaN;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Blopa
 */
public class Graficador extends javax.swing.JFrame {

  private Color[] colors = new Color[] { Color.RED, Color.BLUE, Color.GREEN, Color.CYAN, Color.MAGENTA, Color.ORANGE };
  private int[] rightAlignment;
  private List<Polinomio> list;
  private double xi, xf, yi, yf;
  private int n;

  /**
   * Creates new form Graficador
   */
  public Graficador() {
    list = new ArrayList<>();
    xi = -1.0;
    xf = 1.0;
    yi = -1.0;
    yf = 1;
    n = 101;
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    Canvas = new javax.swing.JPanel() {
      @Override
      public void paintComponent(Graphics g) {
        drawBoard(g);
      }
    };
    titleLabel = new javax.swing.JLabel();
    polinomioTitleLabel = new javax.swing.JLabel();
    polinomioLabel = new javax.swing.JLabel();
    polinomioButton = new javax.swing.JButton();
    xLabel = new javax.swing.JLabel();
    yLabel = new javax.swing.JLabel();
    yAutoCheckBox = new javax.swing.JCheckBox();
    xButton = new javax.swing.JButton();
    yButton = new javax.swing.JButton();
    derivativeButton = new javax.swing.JButton();
    nLabel = new javax.swing.JLabel();
    nButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Graficador");
    setMinimumSize(new java.awt.Dimension(820, 600));
    setPreferredSize(new java.awt.Dimension(820, 600));
    addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentResized(java.awt.event.ComponentEvent evt) {
        formComponentResized(evt);
      }
    });
    getContentPane().setLayout(null);

    Canvas.setMinimumSize(new java.awt.Dimension(550, 550));
    Canvas.setLayout(null);
    getContentPane().add(Canvas);
    Canvas.setBounds(10, 10, 540, 530);

    titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    titleLabel.setText("Graficador");
    getContentPane().add(titleLabel);
    titleLabel.setBounds(590, 20, 150, 14);

    polinomioTitleLabel.setText("Polinomio:");
    getContentPane().add(polinomioTitleLabel);
    polinomioTitleLabel.setBounds(560, 50, 70, 14);
    getContentPane().add(polinomioLabel);
    polinomioLabel.setBounds(570, 70, 440, 20);

    polinomioButton.setText("Cambiar");
    polinomioButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        polinomioButtonActionPerformed(evt);
      }
    });
    getContentPane().add(polinomioButton);
    polinomioButton.setBounds(580, 110, 100, 23);

    xLabel.setText("Eje X: -1.0, 1.0");
    getContentPane().add(xLabel);
    xLabel.setBounds(560, 160, 180, 14);

    yLabel.setText("Eje Y: -1.0, 1.0");
    getContentPane().add(yLabel);
    yLabel.setBounds(560, 240, 180, 14);

    yAutoCheckBox.setSelected(true);
    yAutoCheckBox.setText("Ajuste automático");
    yAutoCheckBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        yAutoCheckBoxActionPerformed(evt);
      }
    });
    getContentPane().add(yAutoCheckBox);
    yAutoCheckBox.setBounds(570, 270, 190, 23);

    xButton.setText("X");
    xButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        xButtonActionPerformed(evt);
      }
    });
    getContentPane().add(xButton);
    xButton.setBounds(740, 160, 50, 23);

    yButton.setText("Y");
    yButton.setEnabled(false);
    yButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        yButtonActionPerformed(evt);
      }
    });
    getContentPane().add(yButton);
    yButton.setBounds(740, 240, 50, 23);

    derivativeButton.setText("f'(x)");
    derivativeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        derivativeButtonActionPerformed(evt);
      }
    });
    getContentPane().add(derivativeButton);
    derivativeButton.setBounds(700, 110, 90, 23);

    nLabel.setText("Muestras: 101");
    getContentPane().add(nLabel);
    nLabel.setBounds(560, 320, 180, 14);

    nButton.setText("n");
    nButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        nButtonActionPerformed(evt);
      }
    });
    getContentPane().add(nButton);
    nButton.setBounds(740, 320, 50, 23);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void polinomioButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_polinomioButtonActionPerformed
    String poli = javax.swing.JOptionPane.showInputDialog(null, "Introduzca el polinomio a graficar", "Nuevo polinomio",
        javax.swing.JOptionPane.QUESTION_MESSAGE);
    if (poli != null) {
      Polinomio polinomio = new Polinomio(poli);
      polinomioLabel.setText(polinomio.toString());
      list.clear();
      list.add(polinomio);
      Canvas.repaint();
    }
  }// GEN-LAST:event_polinomioButtonActionPerformed

  private void yAutoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_yAutoCheckBoxActionPerformed
    yButton.setEnabled(!yAutoCheckBox.isSelected());
    Canvas.repaint();
  }// GEN-LAST:event_yAutoCheckBoxActionPerformed

  private void xButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_xButtonActionPerformed
    double xinit = getNumber("Introduzca el menor valor de x a graficar", "X inicial");
    double xfin = getNumber("Introduzca el mayor valor de x a graficar", "X final");
    xi = Double.isNaN(xinit) ? xi : xinit;
    xf = Double.isNaN(xfin) ? xf : xfin;
    xLabel.setText("Eje X: " + xi + ", " + xf);
    Canvas.repaint();
  }// GEN-LAST:event_xButtonActionPerformed

  private void yButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_yButtonActionPerformed
    double yinit = getNumber("Introduzca el menor valor de y a graficar", "Y inicial");
    double yfin = getNumber("Introduzca el mayor valor de y a graficar", "Y final");
    yi = Double.isNaN(yinit) ? yi : yinit;
    yf = Double.isNaN(yfin) ? yf : yfin;
    yLabel.setText("Eje Y: " + yi + ", " + yf);
    Canvas.repaint();
  }// GEN-LAST:event_yButtonActionPerformed

  private void nButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_nButtonActionPerformed
    double nvalues = getNumber("Introduzca el número de muestras a utilizar", "N muestras");
    n = (int) (Double.isNaN(nvalues) ? n : nvalues);
    nLabel.setText("Muestras: " + n);
    Canvas.repaint();
  }// GEN-LAST:event_nButtonActionPerformed

  private void derivativeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_derivativeButtonActionPerformed
    list.add(list.get(list.size() - 1).derivative());
    Canvas.repaint();
  }// GEN-LAST:event_derivativeButtonActionPerformed

  private void formComponentResized(java.awt.event.ComponentEvent evt) {// GEN-FIRST:event_formComponentResized
    Component[] comps = new Component[] { titleLabel, polinomioLabel, polinomioButton, derivativeButton, xLabel,
        xButton, yLabel, yButton, yAutoCheckBox, nLabel, nButton };
    if (rightAlignment == null) {
      rightAlignment = new int[comps.length];
      for (int c = 0; c < comps.length; c++) {
        rightAlignment[c] = this.getWidth() - comps[c].getX();
      }
    } else {
      for (int c = 0; c < comps.length; c++) {
        comps[c].setBounds(this.getWidth() - rightAlignment[c], comps[c].getY(), comps[c].getWidth(),
            comps[c].getHeight());
      }
      Canvas.setBounds(Canvas.getX(), Canvas.getY(), getWidth() - 280, getHeight() - 60);
    }
  }// GEN-LAST:event_formComponentResized

  private double getNumber(String message, String title) {
    String input = javax.swing.JOptionPane.showInputDialog(null, message, title,
        javax.swing.JOptionPane.QUESTION_MESSAGE);
    if (input != null) {
      try {
        return Double.parseDouble(input);
      } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(null, "Valor invalido: " + input, "Error",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
      }
    }
    return NaN;
  }

  private void drawBoard(Graphics g) {
    double[][][] datas = list.isEmpty() ? null : new double[list.size()][][];
    for (int p = 0; p < list.size(); p++) {
      datas[p] = list.get(p).linspace(xi, xf, n);
    }
    g.setColor(Color.lightGray);
    g.fillRect(0, 0, Canvas.getWidth(), Canvas.getHeight());
    g.setColor(Color.black);
    if (!list.isEmpty() && yAutoCheckBox.isSelected()) {
      for (double[][] data : datas) {
        for (int i = 0; i < n; i++) {
          if (i == 0 || yi > data[i][1]) {
            yi = data[i][1];
          }
          if (i == 0 || yf < data[i][1]) {
            yf = data[i][1];
          }
        }
      }
      yLabel.setText("Eje Y: " + yi + ", " + yf);
    }
    double hx = yi > 0 ? 0 : (yf < 0 ? 1 : (Math.abs(yi) / (yf - yi)));
    double hy = xi > 0 ? 0 : (xf < 0 ? 1 : (Math.abs(xi) / (xf - xi)));
    g.drawLine((int) propX(0), (int) propY(hx), (int) propX(1), (int) propY(hx));
    g.drawLine((int) propX(hy), (int) propY(0), (int) propX(hy), (int) propY(1));
    g.drawString(xi + "", (int) propX(centerText(0)), (int) propY(centerText(hx)));
    g.drawString(xf + "", (int) propX(centerText(1)), (int) propY(centerText(hx)));
    g.drawString(yi + "", (int) propX(centerText(hy)), (int) propY(centerText(0)));
    g.drawString(yf + "", (int) propX(centerText(hy)), (int) propY(centerText(1)));
    for (int p = 0; p < list.size(); p++) {
      g.setColor(colors[p % colors.length]);
      double[][] data = datas[p];
      for (int x = 0; x < data.length; x++) {
        data[x][0] = relX(data[x][0]);
        data[x][1] = relY(data[x][1]);
        if (x > 0) {
          g.drawLine((int) data[x - 1][0], (int) data[x - 1][1], (int) data[x][0], (int) data[x][1]);
        }
      }
    }
  }

  private double centerText(double position) {
    double max = 0.97;
    if (position > max) {
      position = max;
    }
    return position;
  }

  private double propX(double x) {
    return x * Canvas.getWidth();
  }

  private double propY(double y) {
    return (1.0 - y) * Canvas.getHeight();
  }

  private double relX(double x) {
    return propX(((x - xi) / (xf - xi)));
  }

  private double relY(double y) {
    return propY((y - yi) / (yf - yi));
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel Canvas;
  private javax.swing.JButton derivativeButton;
  private javax.swing.JButton nButton;
  private javax.swing.JLabel nLabel;
  private javax.swing.JButton polinomioButton;
  private javax.swing.JLabel polinomioLabel;
  private javax.swing.JLabel polinomioTitleLabel;
  private javax.swing.JLabel titleLabel;
  private javax.swing.JButton xButton;
  private javax.swing.JLabel xLabel;
  private javax.swing.JCheckBox yAutoCheckBox;
  private javax.swing.JButton yButton;
  private javax.swing.JLabel yLabel;
  // End of variables declaration//GEN-END:variables
}
